# The following modifications allow so you can access a site, e.g. drawntoscale.berkeley.edu/about.html without the ".html" tag showing up. For vanity and professionalism. To put this into effect, when linking to sites with <a>, have href="about" instead of href="about.html" and it will show up as so in the user's url.

# Tutorial from https://www.youtube.com/watch?v=-6LyG9I-FPc

# mod_rewrite starts here
RewriteEngine on

# Cache Control Headers
<IfModule mod_headers.c>
    # Cache static assets for 1 year (they have version numbers)
    <FilesMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$">
        Header set Cache-Control "max-age=31536000, public"
    </FilesMatch>
    
    # Cache videos for 1 week (they change less frequently)
    <FilesMatch "\.(mp4|webm|ogg)$">
        Header set Cache-Control "max-age=604800, public"
    </FilesMatch>
    
    # Don't cache HTML files (they should always be fresh)
    <FilesMatch "\.(html|htm)$">
        Header set Cache-Control "no-cache, no-store, must-revalidate"
        Header set Pragma "no-cache"
        Header set Expires "0"
    </FilesMatch>
</IfModule>

# NEW: Redirect .html URLs to clean URLs (for SEO and consistency)
RewriteCond %{THE_REQUEST} \s/+(.*?)\.html[\s?] [NC]
RewriteRule ^ /%1? [R=301,L]

# does not apply to existing directories
RewriteCond %{REQUEST_FILENAME} !-d

# Check for file in directory with .html
RewriteCond %{REQUEST_FILENAME}\.html -f

# Rewrite appearance 
RewriteRule ^(.*)$ $1.html [NC,L]
